version: '3.9'

volumes:
  pgdata:

services:

  postgredb:
    image: postgres:latest
    environment:
      - POSTGRES_DB=currency_converter
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5555:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin1 -d new_db"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    volumes:
      - ./logs:/var/log
      - pgdata:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  redis:
    image: redis:latest
    restart: unless-stopped
    environment:
      - REDIS_PORT=6379
      - REDIS_DATABASES=1
    ports:
      - "6379:6379"

  harvester:
    build:
      context: .
      dockerfile: harvester.dockerfile
    restart: unless-stopped
    environment:
      - COLLECT_HISTORICAL_DATA=True
      - DB_NAME=currency_converter
      - DB_LOGIN=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgredb
    depends_on:
      - postgredb

  backend:
    build:
      context: .
      dockerfile: backend.dockerfile
    restart: unless-stopped
    environment:
      - BACKEND_HOST=backend
      - DB_NAME=currency_converter
      - DB_LOGIN=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgredb
    ports:
      - '5000:5000'
    depends_on:
      - postgredb

  telebot:
    build:
      context: .
      dockerfile: telebot.dockerfile
    restart: unless-stopped
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - TELEGRAM_BOT_TOKEN= #Your bot token
      - DB_HOST=postgredb
      - BACKEND_HOST=backend
    depends_on:
      - backend
    